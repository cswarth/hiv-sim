<?xml version="1.0" standalone="yes"?>

<!-- Generated by BEAUTi v1.8.0                                              -->
<!--       by Alexei J. Drummond, Andrew Rambaut and Marc A. Suchard         -->
<!--       Department of Computer Science, University of Auckland and        -->
<!--       Institute of Evolutionary Biology, University of Edinburgh        -->
<!--       David Geffen School of Medicine, University of California, Los Angeles-->
<!--       http://beast.bio.ed.ac.uk/                                        -->

<!-- Generated by {{user}} on {{date}} -->
<!-- command line:	{command} -->
<!-- working dir:	{{workdir}} -->

<beast>
    <!-- The list of taxa to be analysed (can also include dates/ages).          -->
    <!-- ntax=${taxon_count} -->


    <!-- The overall tax include all patient sequences plus a the original -->
    <!-- founder as an outgroup  -->
    <taxa id="taxa">
	<taxon id="HIV-POL">
	    <date value="0" direction="forwards" units="days"/>
	</taxon>

	{% for pid, patient in patients.iteritems() -%}
	{% for vid,visit in patient.iteritems() -%}
	{% for taxon in visit.taxa -%}
	<taxon id="{{taxon.id}}">
	    <date value="{{visit.date}}" direction="forwards" units="days"/>
	</taxon>
	{% endfor%}
	{%-endfor%}
	{%-endfor%}
    </taxa>

    <!-- Make a tax containing just patient samples, without the outgroup. -->
    <!-- We will infer the ancestral sequence at the root of this taxa. -->
    <taxa id="taxa(patients)">
	{% for pid, patient in patients.iteritems() -%}
	{% for vid,visit in patient.iteritems() -%}
	{% for taxon in visit.taxa -%}
	<taxon idref="{{taxon.id}}"/>
	{% endfor%}
	{%-endfor%}
	{%-endfor%}
    </taxa>

    <!-- Make seperate taxa for each patent visit. -->
    <!-- Later we will mark some (but not al) of these tax as monophyletic. -->
    {% for pid,patient in patients.iteritems() -%}
    {% for vid,visit in patient.iteritems() -%}
    <taxa id="taxa({{pid}}.{{vid}})">
	{% for taxon in visit.taxa -%}
	<taxon idref="{{taxon.id}}"/>
	{% endfor%}
    </taxa>
    {%-endfor%}
    {%-endfor%}


    <!-- The sequence alignment (each sequence refers to a taxon above).         -->
    <!-- ntax=${taxon_count} nchar=${site_count} -->
    <alignment id="alignment" dataType="nucleotide">
      <sequence>
	<taxon idref="HIV-POL"/>
ATGAGTTTGCCAGGAAGATGGAAACCAAAAATGATAGGGGGAATTGGAGGTTTTATCAAAGTAAGACAGT
ATGATCAGATACTCATAGAAATCTGTGGACATAAAGCTATAGGTACAGTATTAGTAGGACCTACACCTGT
CAACATAATTGGAAGAAATCTGTTGACTCAGATTGGTTGCACTTTAAATTTTCCCATTAGCCCTATTGAG
ACTGTACCAGTAAAATTAAAGCCAGGAATGGATGGCCCAAAAGTTAAACAATGGCCATTGACAGAAGAAA
AAATAAAAGCATTAGTAGAAATTTGTACAGAGATGGAAAAGGAAGGGAAAATTTCAAAAATTGGGCCTGA
AAATCCATACAATACTCCAGTATTTGCCATAAAGAAAAAAGACAGTACTAAATGGAGAAAATTAGTAGAT
TTCAGAGAACTTAATAAGAGAACTCAAGACTTCTGGGAAGTTCAATTAGGAATACCACATCCCGCAGGGT
TAAAAAAGAAAAAATCAGTAACAGTACTGGATGTGGGTGATGCATATTTTTCAGTTCCCTTAGATGAAGA
CTTCAGGAAGTATACTGCATTTACCATACCTAGTATAAACAATGAGACACCAGGGATTAGATATCAGTAC
AATGTGCTTCCACAGGGATGGAAAGGATCACCAGCAATATTCCAAAGTAGCATGACAAAAATCTTAGAGC
CTTTTAGAAAACAAAATCCAGACATAGTTATCTATCAATACATGGATGATTTGTATGTAGGATCTGACTT
AGAAATAGGGCAGCATAGAACAAAAATAGAGGAGCTGAGACAACATCTGTTGAGGTGGGGACTTACCACA
CCAGACAAAAAACATCAGAAAGAACCTCCATTCCTTTGGATGGGTTATGAACTCCATCCTGATAAATGGA
CAGTACAGCCTATAGTGCTGCCAGAAAAAGACAGCTGGACTGTCAATGACATACAGAAGTTAGTGGGGAA
ATTGAATTGGGCAAGTCAGATTTACCCAGGGATTAAAGTAAGGCAATTATGTAAACTCCTTAGAGGAACC
AAAGCACTAACAGAAGTAATACCACTAACAGAAGAAGCAGAGCTAGAACTGGCAGAAAACAGAGAGATTC
TAAAAGAACCAGTACATGGAGTGTATTATGACCCATCAAAAGACTTAATAGCAGAAATACAGAAGCAGGG
GCAAGGCCAATGGACATATCAAATTTATCAAGAGCCATTTAAAAATCTGAAAACAGGAAAATATGCAAGA
ATGAGGGGTGCCCACACTAATGATGTAAAACAATTAACAGAGGCAGTGCAAAAAATAACCACAGAAAGCA
TAGTAATATGGGGAAAGACTCCTAAATTTAAACTGCCCATACAAAAGGAAACATGGGAAACATGGTGGAC
AGAGTATTGGCAAGCCACCTGGATTCCTGAGTGGGAGTTTGTTAATACCCCTCCCTTAGTGAAATTATGG
TACCAGTTAGAGAAAGAACCCATAGTAGGAGCAGAAACCTTCTATGTAGATGGGGCAGCTAACAGGGAGA
CTAAATTAGGAAAAGCAGGATATGTTACTAATAGAGGAAGACAAAAAGTTGTCACCCTAACTGACACAAC
AAATCAGAAGACTGAGTTACAAGCAATTTATCTAGCTTTGCAGGATTCGGGATTAGAAGTAAACATAGTA
ACAGACTCACAATATGCATTAGGAATCATTCAAGCACAACCAGATCAAAGTGAATCAGAGTTAGTCAATC
AAATAATAGAGCAGTTAATAAAAAAGGAAAAGGTCTATCTGGCATGGGTACCAGCACACAAAGGAATTGG
AGGAAATGAACAAGTAGATAAATTAGTCAGTGCTGGAATCAGGAAAGTACTATTTTTAGATGGAATAGAT
AAGGCCCAAGATGAACATGAGAAATATCACAGTAATTGGAGAGCAATGGCTAGTGATTTTAACCTGCCAC
CTGTAGTAGCAAAAGAAATAGTAGCCAGCTGTGATAAATGTCAGCTAAAAGGAGAAGCCATGCATGGACA
AGTAGACTGTAGTCCAGGAATATGGCAACTAGATTGTACACATTTAGAAGGAAAAGTTATCCTGGTAGCA
GTTCATGTAGCCAGTGGATATATAGAAGCAGAAGTTATTCCAGCAGAAACAGGGCAGGAAACAGCATATT
TTCTTTTAAAATTAGCAGGAAGATGGCCAGTAAAAACAATACATACTGACAATGGCAGCAATTTCACCGG
TGCTACGGTTAGGGCCGCCTGTTGGTGGGCGGGAATCAAGCAGGAATTTGGAATTCCCTACAATCCCCAA
AGTCAAGGAGTAGTAGAATCTATGAATAAAGAATTAAAGAAAATTATAGGACAGGTAAGAGATCAGGCTG
AACATCTTAAGACAGCAGTACAAATGGCAGTATTCATCCACAATTTTAAAAGAAAAGGGGGGATTGGGGG
GTACAGTGCAGGGGAAAGAATAGTAGACATAATAGCAACAGACATACAAACTAAAGAATTACAAAAACAA
ATTACAAAAATTCAAAATTTTCGGGTTTATTACAGGGACAGCAGAAATCCACTTTGGAAAGGACCAGCAA
AGCTCCTCTGGAAAGGTGAAGGGGCAGTAGTAATACAAGATAATAGTGACATAAAAGTAGTGCCAAGAAG
AAAAGCAAAGATCATTAGGGATTATGGAAAACAGATGGCAGGTGATGATTGTGTGGCAAGTAGACAGGAT
GAGGATTAG
</sequence>
      {% for pid,patient in patients.iteritems() -%}
      {% for vid,visit in patient.iteritems() -%}
      {% for taxon in visit.taxa -%}
	<sequence>
	    <taxon idref="{{taxon.id}}"/>
	    {{taxon.seq}}
	</sequence>
	{% endfor%}
	{%- endfor%}
	{%- endfor%}
    </alignment>

    <!-- The unique patterns from 1 to end                                       -->
    <patterns id="patterns" from="1" strip="false" unique="false">
	<alignment idref="alignment"/>
    </patterns>

    <!-- A prior assumption that the population size has remained constant       -->
    <!-- throughout the time spanned by the genealogy.                           -->
    <constantSize id="constant" units="days">
	<populationSize>
	    <parameter id="constant.popSize" value="1800.0" lower="0.0"/>
	</populationSize>
    </constantSize>

    <!-- Generate a random starting tree under the coalescent process            -->
    <coalescentSimulator id="startingTree">
	<taxa idref="taxa"/>
	<constantSize idref="constant"/>
	{% for pid,patient in patients.iteritems() -%}
	{% for vid,visit in patient.iteritems() -%}
	<coalescentSimulator>
	    <taxa idref="taxa({{pid}}.{{vid}})"/>
	    <constantSize idref="constant"/>
	</coalescentSimulator>
	{%-endfor%}
	{%-endfor%}
    </coalescentSimulator>

    <!-- Generate a tree model                                                   -->
    <treeModel id="treeModel">
	<coalescentTree idref="startingTree"/>
	<rootHeight>
	    <parameter id="treeModel.rootHeight"/>
	</rootHeight>
	<nodeHeights internalNodes="true">
	    <parameter id="treeModel.internalNodeHeights"/>
	</nodeHeights>
	<nodeHeights internalNodes="true" rootNode="true">
	    <parameter id="treeModel.allInternalNodeHeights"/>
	</nodeHeights>
    </treeModel>

    {% for pid,patient in patients.iteritems() -%}
    {% for vid,visit in patient.iteritems() -%}
    <tmrcaStatistic id="tmrca({{pid}}.{{vid}})">
	<mrca>
	    <taxa idref="taxa({{pid}}.{{vid}})"/>
	</mrca>
	<treeModel idref="treeModel"/>
    </tmrcaStatistic>
    <monophylyStatistic id="monophyly({{pid}}.{{vid}})">
	<mrca>
	    <taxa idref="taxa({{pid}}.{{vid}})"/>
	</mrca>
	<treeModel idref="treeModel"/>
    </monophylyStatistic>

    {% endfor %}
    {%- endfor %}

    <!-- Generate a coalescent likelihood                                        -->
    <coalescentLikelihood id="coalescent">
	<model>
	    <constantSize idref="constant"/>
	</model>
	<populationTree>
	    <treeModel idref="treeModel"/>
	</populationTree>
    </coalescentLikelihood>

    <!-- The uncorrelated relaxed clock (Drummond, Ho, Phillips & Rambaut (2006) PLoS Biology 4, e88 )-->
    <discretizedBranchRates id="branchRates">
	<treeModel idref="treeModel"/>
	<distribution>
	    <logNormalDistributionModel meanInRealSpace="true">
		<mean>
		    <parameter id="ucld.mean" value="1.3E-5" lower="0.0"/>
		</mean>
		<stdev>
		    <parameter id="ucld.stdev" value="0.3333333333333333" lower="0.0"/>
		</stdev>
	    </logNormalDistributionModel>
	</distribution>
	<rateCategories>
	    <parameter id="branchRates.categories"/>
	</rateCategories>
    </discretizedBranchRates>
    <rateStatistic id="meanRate" name="meanRate" mode="mean" internal="true" external="true">
	<treeModel idref="treeModel"/>
	<discretizedBranchRates idref="branchRates"/>
    </rateStatistic>
    <rateStatistic id="coefficientOfVariation" name="coefficientOfVariation" mode="coefficientOfVariation" internal="true" external="true">
	<treeModel idref="treeModel"/>
	<discretizedBranchRates idref="branchRates"/>
    </rateStatistic>
    <rateCovarianceStatistic id="covariance" name="covariance">
	<treeModel idref="treeModel"/>
	<discretizedBranchRates idref="branchRates"/>
    </rateCovarianceStatistic>

    <!-- The HKY substitution model (Hasegawa, Kishino & Yano, 1985)             -->
    <HKYModel id="hky">
	<frequencies>
	    <frequencyModel dataType="nucleotide">
		<frequencies>
		    <parameter id="frequencies" value="0.25 0.25 0.25 0.25"/>
		</frequencies>
	    </frequencyModel>
	</frequencies>
	<kappa>
	    <parameter id="kappa" value="2.0" lower="0.0"/>
	</kappa>
    </HKYModel>

    <!-- site model                                                              -->
    <siteModel id="siteModel">
	<substitutionModel>
	    <HKYModel idref="hky"/>
	</substitutionModel>
    </siteModel>

    <!-- Likelihood for tree given sequence data                                 -->
    <ancestralTreeLikelihood id="treeLikelihood" useAmbiguities="false" stateTagName="states">
	<patterns idref="patterns"/>
	<treeModel idref="treeModel"/>
	<siteModel idref="siteModel"/>
	<discretizedBranchRates idref="branchRates"/>
    </ancestralTreeLikelihood>


    <!-- Define operators                                                        -->
    <operators id="operators" optimizationSchedule="default">
	<scaleOperator scaleFactor="0.75" weight="0.1">
	    <parameter idref="kappa"/>
	</scaleOperator>
	<deltaExchange delta="0.01" weight="0.1">
	    <parameter idref="frequencies"/>
	</deltaExchange>
	<scaleOperator scaleFactor="0.75" weight="3">
	    <parameter idref="ucld.mean"/>
	</scaleOperator>
	<scaleOperator scaleFactor="0.75" weight="3">
	    <parameter idref="ucld.stdev"/>
	</scaleOperator>
	<subtreeSlide size="48.0" gaussian="true" weight="15">
	    <treeModel idref="treeModel"/>
	</subtreeSlide>
	<narrowExchange weight="15">
	    <treeModel idref="treeModel"/>
	</narrowExchange>
	<wideExchange weight="3">
	    <treeModel idref="treeModel"/>
	</wideExchange>
	<wilsonBalding weight="3">
	    <treeModel idref="treeModel"/>
	</wilsonBalding>
	<scaleOperator scaleFactor="0.75" weight="3">
	    <parameter idref="treeModel.rootHeight"/>
	</scaleOperator>
	<uniformOperator weight="30">
	    <parameter idref="treeModel.internalNodeHeights"/>
	</uniformOperator>
	<scaleOperator scaleFactor="0.75" weight="3">
	    <parameter idref="constant.popSize"/>
	</scaleOperator>
	<upDownOperator scaleFactor="0.75" weight="3">
	    <up>
		<parameter idref="ucld.mean"/>
	    </up>
	    <down>
		<parameter idref="treeModel.allInternalNodeHeights"/>
	    </down>
	</upDownOperator>
	<swapOperator size="1" weight="10" autoOptimize="false">
	    <parameter idref="branchRates.categories"/>
	</swapOperator>
	<uniformIntegerOperator weight="10">
	    <parameter idref="branchRates.categories"/>
	</uniformIntegerOperator>
    </operators>

    <!-- Define MCMC                                                             -->
    <mcmc id="mcmc" chainLength="1000000" autoOptimize="true" operatorAnalysis="10.ops">
	<posterior id="posterior">
	    <prior id="prior">
		<logNormalPrior mean="1.0" stdev="1.25" offset="0.0" meanInRealSpace="false">
		    <parameter idref="kappa"/>
		</logNormalPrior>
		<uniformPrior lower="0.0" upper="1.0">
		    <parameter idref="frequencies"/>
		</uniformPrior>
		<exponentialPrior mean="0.3333333333333333" offset="0.0">
		    <parameter idref="ucld.stdev"/>
		</exponentialPrior>
		<logNormalPrior mean="1.3E-5" stdev="1.0" offset="0.0" meanInRealSpace="true">
		    <parameter idref="ucld.mean"/>
		</logNormalPrior>
		<oneOnXPrior>
		    <parameter idref="constant.popSize"/>
		</oneOnXPrior>
		<coalescentLikelihood idref="coalescent"/>

		{# we want only the enforce monophyly only for the
		second (and subsequent) patient(s), but we want this to work if there are
		less than two patients.   So we skip the first patient,
		and only the first visit #}

		{% for pid,patient in patients.iteritems() -%}
		{% if loop.index >= 2 -%}
		{% for vid,visit in patient.iteritems() %}
		{% if loop.index == 1 -%}
	 	<booleanLikelihood id="likelihood({{pid}}.{{vid}})">
		  <monophylyStatistic idref="monophyly({{pid}}.{{vid}})"/>
		</booleanLikelihood>
		{%- endif %}
		{%- endfor %}
		{%- endif %}
		{%- endfor%}
	    </prior>
	    <likelihood id="likelihood">
		<ancestralTreeLikelihood idref="treeLikelihood"/>
	    </likelihood>
	</posterior>
	<operators idref="operators"/>

	<!-- write log to screen                                                     -->
	<log id="screenLog" logEvery="10000">
	    <column label="Posterior" dp="4" width="12">
		<posterior idref="posterior"/>
	    </column>
	    <column label="Prior" dp="4" width="12">
		<prior idref="prior"/>
	    </column>
	    <column label="Likelihood" dp="4" width="12">
		<likelihood idref="likelihood"/>
	    </column>
	    <column label="rootHeight" sf="6" width="12">
		<parameter idref="treeModel.rootHeight"/>
	    </column>
	    <column label="ucld.mean" sf="6" width="12">
		<parameter idref="ucld.mean"/>
	    </column>
	</log>

	<!-- write log to file                                                       -->
	<log id="fileLog" logEvery="400" fileName="beastout.log" overwrite="false">
	    <posterior idref="posterior"/>
	    <prior idref="prior"/>
	    <likelihood idref="likelihood"/>
	    <parameter idref="treeModel.rootHeight"/>
	    <parameter idref="constant.popSize"/>
	    <parameter idref="kappa"/>
	    <parameter idref="frequencies"/>
	    <parameter idref="ucld.mean"/>
	    <parameter idref="ucld.stdev"/>
	    <rateStatistic idref="meanRate"/>
	    <rateStatistic idref="coefficientOfVariation"/>
	    <rateCovarianceStatistic idref="covariance"/>
	    <ancestralTreeLikelihood idref="treeLikelihood"/>
	    <coalescentLikelihood idref="coalescent"/>
	</log>

	<!-- write tree log to file                                                  -->
	<logTree id="treeFileLog" logEvery="400" nexusFormat="true" fileName="beastout.trees" sortTranslationTable="true">
	    <treeModel idref="treeModel"/>
	    <trait name="rate" tag="rate">
		<discretizedBranchRates idref="branchRates"/>
	    </trait>
	    <posterior idref="posterior"/>
	</logTree>

	<!-- Ancestral state reconstruction -->

	<!-- Infer ancestral state at the mrca of all patients other than the -->
	<!-- first. -->

	
	<log id="traitFileLog" logEvery="400" fileName="ancestralSequences.log">
	    <ancestralTrait name="trait" traitName="states">
		<treeModel idref="treeModel"/>
		<ancestralTreeLikelihood idref="treeLikelihood"/>
		<mrca>
		  <taxa idref="taxa(patients)"/>
		</mrca>
	    </ancestralTrait>
	</log>

    </mcmc>
    <report>
	<property name="timer">
	    <mcmc idref="mcmc"/>
	</property>
    </report>
</beast>
